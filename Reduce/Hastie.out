
Jacobian in geometric coordinates:

j := j0 + eps*j1 + eps**2*j2

j0 := r

j1 := cos(w)*df(d1,r)*r + cos(2*w)*(e1 - df(e1,r)*r) + cos(3*w)*(2*t1 - df(t1,r)*r)

j2 :=  - p2 - 2*df(t1,r)*t1 - df(p2,r)*r - df(e1,r)*e1 + cos(w)*( - df(t1,r)*e1 - 2*df(e1,r)*t1 + df(d1,r)*e1)

       + 2*cos(2*w)*df(d1,r)*t1

j/x := k0 + eps*k1 + eps*eps*k2:

k0 := r

k1 := cos(w)*r*(r + df(d1,r)) + cos(2*w)*(e1 - df(e1,r)*r) + cos(3*w)*(2*t1 - df(t1,r)*r)

        3                                                                            2
k2 := (r  - 2*p2 + 2*d1*r - 4*df(t1,r)*t1 - 2*df(p2,r)*r - 2*df(e1,r)*e1 + df(d1,r)*r )/2

                                                                      2
       + (cos(w)*( - e1*r - 2*df(t1,r)*e1 - 4*df(e1,r)*t1 - df(e1,r)*r  + 2*df(d1,r)*e1))/2

                     3             2                             2
       + (cos(2*w)*(r  - df(t1,r)*r  + 4*df(d1,r)*t1 + df(d1,r)*r ))/2 + (cos(3*w)*r*(e1 - df(e1,r)*r))/2

       + (cos(4*w)*r*(2*t1 - df(t1,r)*r))/2

Choice of P2 with associated residual:

              2    4       2         2
q2 := ( - 8*t1  + r  - 4*e1  + 4*d1*r )/(8*r)

res2 := 0

Straight field-line flux-surface label:

rst := abs(r)

theta := tt0 + eps*tt1 + eps**2*tt2

tt0 := w

tt1 := sin(w)*(r + df(d1,r)) + (sin(2*w)*(e1 - df(e1,r)*r))/(2*r) + (sin(3*w)*(2*t1 - df(t1,r)*r))/(3*r)

                                                                    2
tt2 := (sin(w)*( - e1*r - 2*df(t1,r)*e1 - 4*df(e1,r)*t1 - df(e1,r)*r  + 2*df(d1,r)*e1))/(2*r)

                      3             2                             2
        + (sin(2*w)*(r  - df(t1,r)*r  + 4*df(d1,r)*t1 + df(d1,r)*r ))/(4*r) + (sin(3*w)*(e1 - df(e1,r)*r))/6

        + (sin(4*w)*(2*t1 - df(t1,r)*r))/8

Secular variation residual:

rest := 0

Evaluate covariant metric tensor in geometric coordinates:

Evaluate contravariant metric tensor in geometric coordinates:

Transform contravariant metric tensor to straight coordinates:

Express geometric angle in terms of straight angle:

Contravariant metric tensor elements in straight coordinates:

gr2 := gr20 + eps*gr21 + eps**2*gr22

gr20 := 1

gr21 :=  - 2*cos(t)*df(d1,r) + 2*cos(2*t)*df(e1,r) + 2*cos(3*t)*df(t1,r)

              2      4       2         2             2  2             2  2             2  2      2
gr22 := (16*t1  + 3*r  + 6*e1  + 4*d1*r  + 2*df(t1,r) *r  + 2*df(e1,r) *r  + 2*df(d1,r) *r )/(4*r )

grt2 := grt20 + eps*grt21 + eps**2*grt22

grt20 := 0

                                                                                                  2       2
grt21 := (sin(t)*(r + df(d1,r) + df(d1,r,2)*r))/r + (sin(2*t)*( - 3*e1 - df(e1,r)*r - df(e1,r,2)*r ))/(2*r )

                                                          2       2
          + (sin(3*t)*( - 8*t1 - df(t1,r)*r - df(t1,r,2)*r ))/(3*r )

grt22 := 0

x*x := x20 + eps*x21 + eps**2*x22

x20 := 1

x21 :=  - 2*cos(t)*r

            2
x22 := ( - r  - 4*d1 - 2*df(d1,r)*r)/2

Express Grad-Shafranov equation in straight coordinates:

Fourier analyze Grad-Shafranov equation:

Components of Grad-Shafranov equation:

Zeroth-order equilibrium equation:

                        2            3   3
c0 := (2*q*r - df(q,r)*r  + df(p,r)*q )/q

c1 := 1

                            2            3   3
g2p := ( - 2*q*r + df(q,r)*r  - df(p,r)*q )/q

l=1 shaping equation:

                          3
d1pp := (q*r - 2*df(p,r)*q  - 3*df(d1,r)*q + 2*df(d1,r)*df(q,r)*r)/(q*r)

l=2 shaping equation:

                                                       2      2
e1pp := (3*e1*q - 3*df(e1,r)*q*r + 2*df(e1,r)*df(q,r)*r )/(q*r )

l=3 shaping equation:

                                                       2      2
t1pp := (8*q*t1 - 3*df(t1,r)*q*r + 2*df(q,r)*df(t1,r)*r )/(q*r )

Second-order equilibrium equation:

                 3                                                       2                                2
g4p := ( - 12*q*r  - 16*g2*q*r - 8*d1*q*r - 32*df(t1,r)*q*t1 - 4*df(t1,r) *q*r - 4*df(t1,r,2)*df(t1,r)*q*r

                        2              4                 2               2                 2                     2  2
         + 16*df(q,r)*t1  + 3*df(q,r)*r  + 8*df(q,r)*g2*r  + 6*df(q,r)*e1  + 4*df(q,r)*d1*r  + 2*df(q,r)*df(t1,r) *r

                      3  2                 3                 2                  3                                2
         + 2*df(p,r)*q *r  + 8*df(p,r)*d1*q  - 4*df(g2,r)*q*r  - 4*df(g2,r)*g2*q  - 12*df(e1,r)*e1*q - 4*df(e1,r) *q*r

                     2          2                            2                 2                       3
         + 2*df(e1,r) *df(q,r)*r  - 4*df(e1,r,2)*df(e1,r)*q*r  - 4*df(d1,r)*q*r  + 4*df(d1,r)*df(p,r)*q *r

                     2                 2          2                            2      3
         - 4*df(d1,r) *q*r + 2*df(d1,r) *df(q,r)*r  - 4*df(d1,r,2)*df(d1,r)*q*r )/(4*q )

S/r := ss

ss := i*n*r

Q/r := qq0 + eps*qq1 + eps**2*qq2

qq0 := ( - i)/(n*r)

qq1 := ( - 2*cos(t)*i*df(d1,r))/(n*r) + (2*cos(2*t)*i*df(e1,r))/(n*r) + (2*cos(3*t)*i*df(t1,r))/(n*r)

                2      4       2         2             2  2             2  2             2  2         3
qq2 := (i*(16*t1  + 3*r  + 6*e1  + 4*d1*r  - 6*df(t1,r) *r  - 6*df(e1,r) *r  - 6*df(d1,r) *r ))/(4*n*r )

T/r := tc0 + eps*tc1 + eps**2*tc2

tc0 := (i*df(g,r)*invf)/(n*r)

                                                                                                2       2
tc1 := (sin(t)*(r + df(d1,r) + df(d1,r,2)*r))/r + (sin(2*t)*( - 3*e1 - df(e1,r)*r - df(e1,r,2)*r ))/(2*r )

                                                        2       2
        + (sin(3*t)*( - 8*t1 - df(t1,r)*r - df(t1,r,2)*r ))/(3*r ) + (2*cos(t)*i*df(d1,r)*df(g,r)*invf)/(n*r)

        + ( - 2*cos(2*t)*i*df(e1,r)*df(g,r)*invf)/(n*r) + ( - 2*cos(3*t)*i*df(g,r)*df(t1,r)*invf)/(n*r)

                                2      4       2         2             2  2             2  2             2  2         3
tc2 := (i*df(g,r)*invf*( - 16*t1  - 3*r  - 6*e1  - 4*d1*r  + 6*df(t1,r) *r  + 6*df(e1,r) *r  + 6*df(d1,r) *r ))/(4*n*r )

U/r := uu0 + eps*uu1 + eps**2*uu2

                   2
uu0 := df(p,r)*invf

                            2                                                     2                                   2
uu1 := 2*cos(t)*df(p,r)*invf *( - r + df(d1,r)) - 2*cos(2*t)*df(e1,r)*df(p,r)*invf  - 2*cos(3*t)*df(p,r)*df(t1,r)*invf

                    2
uu2 := (df(p,r)*invf

                  2      4       2          2             2  2             2  2                3             2  2
        *( - 16*t1  - 5*r  - 6*e1  - 12*d1*r  + 6*df(t1,r) *r  + 6*df(e1,r) *r  - 12*df(d1,r)*r  + 6*df(d1,r) *r ))

            2
       /(4*r )

V/r := vv0 + eps*vv1 + eps**2*vv2

            2          2     2
vv0 := (i*(n  - df(g,r) *invf ))/(n*r)

                     2               2                   2     2
vv1 := (2*cos(t)*i*(n *r + df(d1,r)*n  - df(d1,r)*df(g,r) *invf ))/(n*r)

                                      2          2     2
        + (2*cos(2*t)*i*df(e1,r)*( - n  + df(g,r) *invf ))/(n*r)

                                      2          2     2
        + (2*cos(3*t)*i*df(t1,r)*( - n  + df(g,r) *invf ))/(n*r)

                  2   2      2  4       2  2         2  2             2  2  2             2     2   2
vv2 := (i*( - 16*n *t1  + 7*n *r  - 6*e1 *n  + 4*d1*n *r  + 6*df(t1,r) *n *r  + 16*df(g,r) *invf *t1

                       2     2  4            2   2     2            2        2  2            2         2     2  2
            + 3*df(g,r) *invf *r  + 6*df(g,r) *e1 *invf  + 4*df(g,r) *d1*invf *r  - 6*df(g,r) *df(t1,r) *invf *r

                        2  2  2             2        2     2  2                2  3             2  2  2
            + 6*df(e1,r) *n *r  - 6*df(e1,r) *df(g,r) *invf *r  + 12*df(d1,r)*n *r  + 6*df(d1,r) *n *r

                        2        2     2  2         3
            - 6*df(d1,r) *df(g,r) *invf *r ))/(4*n*r )

W/r := ww0 + eps*ww1 + eps**2*ww2

                             3
ww0 := 2*df(g,r)*df(p,r)*invf  - df(g,r)*df(invf,r) - df(g,r,2)*invf

                                    3                                                             3
ww1 := 4*cos(t)*df(g,r)*df(p,r)*invf *( - r + df(d1,r)) - 4*cos(2*t)*df(e1,r)*df(g,r)*df(p,r)*invf

                                                  3
        - 4*cos(3*t)*df(g,r)*df(p,r)*df(t1,r)*invf

                            3
ww2 := (df(g,r)*df(p,r)*invf

                  2      4       2          2             2  2             2  2                3             2  2
        *( - 16*t1  - 5*r  - 6*e1  - 12*d1*r  + 6*df(t1,r) *r  + 6*df(e1,r) *r  - 12*df(d1,r)*r  + 6*df(d1,r) *r ))

            2
       /(2*r )

X/r := xx0 + eps*xx1 + eps**2*xx2

                                            3
xx0 := i*df(p,r)*invf*n*(invf - df(p,r)*invf *r + df(invf,r)*r)

                                    3                                                          3
xx1 := 2*sin(t)*df(g,r)*df(p,r)*invf *(r - df(d1,r)) + 4*sin(2*t)*df(e1,r)*df(g,r)*df(p,r)*invf

                                                  3                                                        3  2
        + 6*sin(3*t)*df(g,r)*df(p,r)*df(t1,r)*invf  + cos(t)*i*df(p,r)*invf*n*( - 3*invf*r + 4*df(p,r)*invf *r

                           2                                          3
           - 2*df(invf,r)*r  + df(d1,r)*invf - 2*df(d1,r)*df(p,r)*invf *r + df(d1,r,2)*invf*r)

                                  2                                                  2  2               2
        + (cos(2*t)*i*df(p,r)*invf *n*( - 3*e1 - df(e1,r)*r + 2*df(e1,r)*df(p,r)*invf *r  - df(e1,r,2)*r ))/r

                                  2                                       2                          2  2
        + (cos(3*t)*i*df(p,r)*invf *n*( - 8*t1 - df(t1,r)*r - df(t1,r,2)*r  + 2*df(p,r)*df(t1,r)*invf *r ))/r

                                     3                                3   2               3  4               2     3
xx2 := (i*df(p,r)*invf*n*( - 6*invf*r  - 8*d1*invf*r + 16*df(p,r)*invf *t1  - df(p,r)*invf *r  + 6*df(p,r)*e1 *invf

                                3  2                     2     3  2                 4                    2
            + 20*df(p,r)*d1*invf *r  - 6*df(p,r)*df(t1,r) *invf *r  - 2*df(invf,r)*r  - 8*df(invf,r)*d1*r

                        2             3  2                     2                           3  3
            - 6*df(e1,r) *df(p,r)*invf *r  - 16*df(d1,r)*invf*r  + 24*df(d1,r)*df(p,r)*invf *r

                                     3             2             3  2                      3
            - 4*df(d1,r)*df(invf,r)*r  - 6*df(d1,r) *df(p,r)*invf *r  - 4*df(d1,r,2)*invf*r ))/(4*r)

c00 := c000 + eps*c001 + eps**2*c002

c000 := 1

c001 := 2*cos(t)*df(d1,r) - 2*cos(2*t)*df(e1,r) - 2*cos(3*t)*df(t1,r)

                 2      4       2         2             2  2             2  2             2  2      2
c002 := ( - 16*t1  - 3*r  - 6*e1  - 4*d1*r  + 6*df(t1,r) *r  + 6*df(e1,r) *r  + 6*df(d1,r) *r )/(4*r )

d00 := d000 + eps*d001 + eps**2*d002

d000 := 1

d001 := 2*cos(t)*( - r + df(d1,r)) - 2*cos(2*t)*df(e1,r) - 2*cos(3*t)*df(t1,r)

                 2      4       2          2             2  2             2  2                3             2  2      2
d002 := ( - 16*t1  - 5*r  - 6*e1  - 12*d1*r  + 6*df(t1,r) *r  + 6*df(e1,r) *r  - 12*df(d1,r)*r  + 6*df(d1,r) *r )/(4*r )

         + 2*cos(t)*df(e1,r)*r + 2*cos(2*t)*r*(df(t1,r) - df(d1,r)) + 2*cos(3*t)*df(e1,r)*r
